# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    # branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write    
  contents: read
  security-events: write
  actions: read
      
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository 
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 
          
      - name: Configure AWS Credentials
        id: aws_credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # role-to-assume: arn:aws:iam::307534210433:role/github-to-terraform-private-registry
          role-to-assume: arn:aws:iam::727587131129:role/s3_github_role
          aws-region: ap-east-1    

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}    

      # - name: Set env
      #   run: |
      #     echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#hket-group/}" >> $GITHUB_ENV
      #     echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: Python update registry S3 bucket
        env:
          GPG_KEYID: ${{ steps.import_gpg.outputs.keyid }}
          GPG_PUBLICKEY: ${{ secrets.GPG_PUBLIC_KEY }} 
          GORELEASER_METADATA: ${{ steps.go_releaser.outputs.metadata }} 
          GORELEASER_ARTIFACTS: ${{ steps.go_releaser.outputs.artifacts }} 
        run: python .github/workflows/download_redirect.py    

#       - name: AWS CodeGuru Reviewer Scanner
#         uses: aws-actions/codeguru-reviewer@v1.1
#         with:
#           s3_bucket: codeguru-reviewer-github-bucket  
 
#       - name: Upload review result
#         uses: github/codeql-action/upload-sarif@v2
#         with:
#           sarif_file: codeguru-results.sarif.json
